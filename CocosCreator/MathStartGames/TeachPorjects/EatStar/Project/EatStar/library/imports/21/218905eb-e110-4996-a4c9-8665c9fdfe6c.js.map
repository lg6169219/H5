{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","enabled","init","game","node","opacity","reuse","getPlayerDistance","playerPos","player","getCenterPos","pos","v2","x","y","dist","sub","mag","onPicked","getPosition","gainScore","despawnStar","update","dt","getBoundingBox","height","opacityRatio","timer","starDuration","minOpacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;;AAQLC,YAAQ,kBAAY;AAChB,aAAKC,OAAL,GAAe,KAAf;AACH,KAVI;;AAYL;AACAC,UAAM,cAAUC,IAAV,EAAgB;AAClB,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKF,OAAL,GAAe,IAAf;AACA,aAAKG,IAAL,CAAUC,OAAV,GAAoB,GAApB;AACH,KAjBI;;AAmBLC,SAnBK,iBAmBEH,IAnBF,EAmBQ;AACT,aAAKD,IAAL,CAAUC,IAAV;AACH,KArBI;;;AAuBLI,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,YAAjB,EAAhB;AACA;AACA,YAAIC,MAAMjB,GAAGkB,EAAH,CAAM,KAAKR,IAAL,CAAUS,CAAhB,EAAmB,KAAKT,IAAL,CAAUU,CAA7B,CAAV;AACA,YAAIC,OAAOJ,IAAIK,GAAJ,CAAQR,SAAR,EAAmBS,GAAnB,EAAX;AACA,eAAOF,IAAP;AACH,KA9BI;;AAgCLG,cAAU,oBAAW;AACjB,YAAIP,MAAM,KAAKP,IAAL,CAAUe,WAAV,EAAV;AACA;AACA,aAAKhB,IAAL,CAAUiB,SAAV,CAAoBT,GAApB;AACA;AACA,aAAKR,IAAL,CAAUkB,WAAV,CAAsB,KAAKjB,IAA3B;AACH,KAtCI;;AAwCL;AACAkB,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKhB,iBAAL,KAA4B,KAAKR,UAAL,GAAkB,KAAKI,IAAL,CAAUM,MAAV,CAAiBL,IAAjB,CAAsBoB,cAAtB,GAAuCC,MAAvC,GAAgD,CAAlG,EAAsG;AAClG;AACA,iBAAKP,QAAL;AACA;AACH;AACD;AACA,YAAIQ,eAAe,IAAI,KAAKvB,IAAL,CAAUwB,KAAV,GAAgB,KAAKxB,IAAL,CAAUyB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKzB,IAAL,CAAUC,OAAV,GAAoBwB,aAAaC,KAAKC,KAAL,CAAWL,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AApDI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius: 0,\n    },\n\n    onLoad: function () {\n        this.enabled = false;\n    },\n\n    // use this for initialization\n    init: function (game) {\n        this.game = game;\n        this.enabled = true;\n        this.node.opacity = 255;\n    },\n\n    reuse (game) {\n        this.init(game);\n    },\n\n    getPlayerDistance: function () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getCenterPos();\n        // 根据两点位置计算两点之间距离\n        var pos = cc.v2(this.node.x, this.node.y);\n        var dist = pos.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked: function() {\n        var pos = this.node.getPosition();\n        // 调用 Game 脚本的得分方法\n        this.game.gainScore(pos);\n        // 当星星被收集时，调用 Game 脚本中的接口，销毁当前星星节点，生成一个新的星星\n        this.game.despawnStar(this.node);\n    },\n\n    // called every frame\n    update: function (dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < (this.pickRadius + this.game.player.node.getBoundingBox().height / 2)) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n        // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n});\n"]}